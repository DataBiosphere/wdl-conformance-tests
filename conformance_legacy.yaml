# some of these tests depend on write_json(), and cromwell and miniwdl perform write_json() differently
# miniwdl inserts whitespace in between elements when writing json and cromwell does not
- description: |
    Legacy test for type_pair_basic
    MiniWDL has trouble with write_json()
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/type_pair_basic.wdl
    json: legacy/type_pair_basic.json
  outputs:
    typePairWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '111'}
- description: |
    Legacy test for type_pair_with_files
    MiniWDL cannot run this as input files must be mounted before running, and the WDL calls a file by filename
  tags: [legacy, "type_pair"]
  versions: ['1.0']
  inputs:
    wdl: legacy/type_pair_with_files.wdl
    json: legacy/type_pair_with_files.json
  outputs:
    typePairWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: 'a57c217bff53c247baabe3e910173a49'}
- description: |
    Legacy test for v1_spec_declaration
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/v1_spec_declaration.wdl
    json: legacy/v1_spec.json
  outputs:
    wf.x.value:
      type: String
      value: "Hello, x!"
    wf.y.value:
      type: String
      value: "Hello, y!"
    wf.z.the_output:
      type: File
      value: {md5sum: '5f2c4e74d1e58614b094b31790315324'}
- description: |
    Legacy test for sub_as_input
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/sub_as_input.wdl
    json: legacy/sub.json
  outputs:
    subWorkflow.get_sub.the_output:
      type: File
      value: {regex: 'test\.csv'}
- description: |
    Legacy test for sub_as_input_with_file
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/sub_as_input_with_file.wdl
    json: legacy/sub.json
  outputs:
    subWorkflow.get_sub.the_output:
      type: File
      value: {regex: 'test\.csv'}
- description: |
    Legacy test for size_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/size_as_command.wdl
    json: legacy/size.json
  outputs:
    sizeWorkflow.get_size.the_output:
      type: File
      value: {regex: '19\.0+$'}
- description: |
    Legacy test for size_as_output
    Cromwell appears to not support nonbinary units with size()
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/size_as_output.wdl
    json: legacy/empty.json
  outputs:
    sizeWorkflow.copy_output.the_output:
      type: File
      value: {regex: '22\.0+ 0\.0220* 0\.021484(375)?'}
    sizeWorkflow.get_size.created_file_size:
      type: Float
      value: 22.0
    sizeWorkflow.get_size.created_file_size_in_KB:
      type: Float
      value: 0.022
    sizeWorkflow.get_size.created_file_size_in_KiB:
      type: Float
      value: 0.021484375
- description: |
    Legacy test for ceil_as_input
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/ceil_as_input.wdl
    json: legacy/ceil.json
  outputs:
    ceilWorkflow.get_ceil.the_ceiling:
      type: File
      value: {regex: '12\.0+$'}
- description: |
    Legacy test for ceil_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/ceil_as_command.wdl
    json: legacy/ceil.json
  outputs:
    ceilWorkflow.get_ceil.the_ceiling:
      type: File
      value: {md5sum: '2737b49252e2a4c0fe4c342e92b13285'}
- description: |
    Legacy test for floor_as_input
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/floor_as_input.wdl
    json: legacy/floor.json
  outputs:
    floorWorkflow.get_floor.the_flooring:
      type: File
      value: {regex: '11\.0+$'}
- description: |
    Legacy test for floor_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/floor_as_command.wdl
    json: legacy/floor.json
  outputs:
    floorWorkflow.get_floor.the_flooring:
      type: File
      value: {md5sum: '166d77ac1b46a1ec38aa35ab7e628ab5'}
- description: |
    Legacy test for round_as_input
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/round_as_input.wdl
    json: legacy/round.json
  outputs:
    roundWorkflow.get_round.the_rounding:
      type: File
      value: {regex: '11\.0+$'}
- description: |
    Legacy test for round_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/round_as_command.wdl
    json: legacy/round.json
  outputs:
    roundWorkflow.get_round.the_rounding:
      type: File
      value: {md5sum: '166d77ac1b46a1ec38aa35ab7e628ab5'}
- description: |
    Legacy test for stdout_as_output
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/stdout_as_output.wdl
    json: legacy/stdout.json
  outputs:
    stdoutWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '91d69f7c47b6e7d5e4d81fab67f7f304'}
    stdoutWorkflow.get_stdout.check_this:
      type: File
      value: {md5sum: '91d69f7c47b6e7d5e4d81fab67f7f304'}
- description: |
    Legacy test for stderr_as_output
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/stderr_as_output.wdl
    json: legacy/stderr.json
  outputs:
    stderrWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '2332021c3feef276abe077f34276abfe'}
    stderrWorkflow.get_stderr.check_this:
      type: File
      value: {md5sum: '2332021c3feef276abe077f34276abfe'}
- description: |
    Legacy test for read_lines_as_output
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/read_lines_as_output.wdl
    json: legacy/read_lines.json
  outputs:
    readLinesWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '0cf95c7bec0f04798b2e95d762e2210e'}
    readLinesWorkflow.read_lines.out_array:
      type: Array[String]
      value: ["line 1", "\t\tline 2 with tabs", " line 3", "", "line 5"]
- description: |
    Legacy test for read_tsv_as_output
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/read_tsv_as_output.wdl
    json: legacy/read_tsv.json
  outputs:
    readTsvWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '577e5fb9bb016c922798424a3c82e742'}
    readTsvWorkflow.read_tsv.out_tsv:
      type: Array[Array[String]]
      value: [["1","2","3"],["4","5","6"],["7","8","9"]]
- description: |
    Legacy test for read_json_as_output
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/read_json_as_output.wdl
    json: legacy/read_json.json
  outputs:
    readJsonWorkflow.copy_output.the_output:
      type: File
      value: {regex: '{\"key1\":\s?\"value1\",\s?\"key2\":\s?\"value2\"}'}
    readJsonWorkflow.read_json.out_json:
      type: Map[String, String]
      value: {"key1": "value1", "key2": "value2"}
- description: |
    Legacy test for read_map_as_output
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/read_map_as_output.wdl
    json: legacy/read_map.json
  outputs:
    readMapWorkflow.copy_output.the_output:
      type: File
      value: {regex: 'key1\s+value1\s+key2\s+value2'}
    readMapWorkflow.read_map.out_map:
      type: Map[String, String]
      value: {"key1": "value1", "key2": "value2"}
- description: |
    Legacy test for read_int_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/read_int_as_command.wdl
    json: legacy/read_int.json
  outputs:
    readIntWorkflow.read_int.the_output:
      type: File
      value: {md5sum: '166d77ac1b46a1ec38aa35ab7e628ab5'}
- description: |
    Legacy test for read_string_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/read_string_as_command.wdl
    json: legacy/read_string.json
  outputs:
    readStringWorkflow.read_string.the_output:
      type: File
      value: {md5sum: '91d69f7c47b6e7d5e4d81fab67f7f304'}
- description: |
    Legacy test for read_float_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/read_float_as_command.wdl
    json: legacy/read_float.json
  outputs:
    readFloatWorkflow.read_float.the_output:
      type: File
      value: {regex: '11\.23450*$'}
- description: |
    Legacy test for read_boolean_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/read_boolean_as_command.wdl
    json: legacy/read_boolean.json
  outputs:
    readBooleanWorkflow.read_boolean.the_output:
      type: File
      value: {md5sum: '74d9a83219cabaab06a69fd318873f33'}
- description: |
    Legacy test for write_tsv_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/write_tsv_as_command.wdl
    json: legacy/write_tsv.json
  outputs:
    writeTsvWorkflow.write_tsv.the_output:
      type: File
      value: {md5sum: '23754c24ac7327768d56aa9909fb8473'}
- description: |
    Legacy test for write_json_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/write_json_as_command.wdl
    json: legacy/write_json.json
  outputs:
    writeJsonWorkflow.write_json.the_output:
      type: File
      value: {regex: '{\"key1\":\s?\"value1\",\s?\"key2\":\s?\"value2\"}'}
- description: |
    Legacy test for write_map_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/write_map_as_command.wdl
    json: legacy/write_map.json
  outputs:
    writeMapWorkflow.write_map.the_output:
      type: File
      value: {regex: 'key1\s+value1\nkey2\s+value2'}
- description: |
    Legacy test for range_as_input
  tags: [legacy, range]
  versions: ['1.0']
  inputs:
    wdl: legacy/range_as_input.wdl
    json: legacy/range.json
  outputs:
    rangeWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '4ae1ec070a2217ff003b2ea3631531ac'}
- description: |
    Legacy test for range_as_input, fail
  tags: [legacy, fail]
  versions: ['1.0']
  inputs:
    wdl: legacy/range_as_input.wdl
    json: legacy/range_invalid.json
  outputs:
    fail: {}
- description: |
    Legacy test for length_as_input_with_map
  tags: [legacy, fail]
  versions: ['1.0']
  inputs:
    wdl: legacy/length_as_input_with_map.wdl
    json: legacy/length.json
  outputs:
    fail: {}
- description: |
    Legacy test for write_lines_as_command
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/write_lines_as_command.wdl
    json: legacy/write_lines.json
  outputs:
    writeLinesWorkflow.write_lines.the_output:
      type: File
      value: {md5sum: '67c62663b722611ba87041eb05870eb9'}
- description: |
    Legacy test for range_as_input, range=0
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/range_as_input.wdl
    json: legacy/range_0.json
  outputs:
    rangeWorkflow.copy_output.the_output:
      type: File
      value: {regex: '\s?'}
- description: |
    Legacy test for transpose_as_input
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/transpose_as_input.wdl
    json: legacy/transpose.json
  outputs:
    transposeWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '7c72caeae4ed3a94a1c5c3f856466ebd'}
- description: |
    Legacy test for length_as_input
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/length_as_input.wdl
    json: legacy/length.json
  outputs:
    lengthWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '6d7fce9fee471194aa8b5b6e47267f03'}
- description: |
    Legacy test for length_as_input, fail
  tags: [legacy, fail]
  versions: ['1.0']
  inputs:
    wdl: legacy/length_as_input.wdl
    json: legacy/length_invalid.json
  outputs:
    fail: {}
- description: |
    Legacy test for zip_as_input
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/zip_as_input.wdl
    json: legacy/zip.json
  outputs:
    zipWorkflow.copy_output.the_output:
      type: File
      value: {regex: '\[((({\"left)|(\"right))\":(\s?)([1-3],(\s?)|(\"[abc])\"},?(\s?))){6}\]'} # could be better
- description: |
    Legacy test for cross_as_input
  tags: [legacy]
  versions: ['1.0']
  inputs:
    wdl: legacy/cross_as_input.wdl
    json: legacy/cross.json
  outputs:
    crossWorkflow.copy_output.the_output:
      type: File
      value: {regex: '\[{\"left\":(\s?)1,\1\"right\":\1\"a\"},\1{\"left\":(\1)1,\1\"right\":\1\"b\"},\1{\"left\":(\1)2,\1\"right\":\1\"a\"},\1{\"left\":(\1)2,\1\"right\":\1\"b\"},\1{\"left\":(\1)3,\1\"right\":\1\"a\"},\1{\"left\":(\1)3,\1\"right\":\1\"b\"}\]'}
- description: |
    Legacy test for flatten_as_input
  tags: [legacy, flatten]
  versions: ['1.0']
  inputs:
    wdl: legacy/flatten_as_input.wdl
    json: legacy/flatten.json
  outputs:
    flattenWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '6564a95855125852aca9934ef00ab87d'}
- description: |
    Legacy test for as_pairs_as_input
  tags: [legacy]
  versions: ['1.1']
  inputs:
    wdl: legacy/as_pairs_as_input.wdl
    json: legacy/as_pairs.json
  outputs:
    asPairsWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: 'e9f8872409ecc6ef06c505caa58265b6'}
- description: |
    Legacy test for as_map_as_input
    It looks like MiniWDL does not have the function as_map()
  tags: [legacy]
  versions: ['1.1']
  inputs:
    wdl: legacy/as_map_as_input.wdl
    json: legacy/as_map.json
  outputs:
    asMapWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: 'f2ac4e62ad3171bd856c5d70160f1052'}
- description: |
    Legacy test for keys_as_input
  tags: [legacy]
  versions: ['1.1']
  inputs:
    wdl: legacy/keys_as_input.wdl
    json: legacy/keys.json
  outputs:
    keysWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: '3a63b1c5da9cd4c9227c9d1ab4d67449'}
- description: |
    Legacy test for collect_by_key_as_input
  tags: [legacy]
  versions: ['1.1']
  inputs:
    wdl: legacy/collect_by_key_as_input.wdl
    json: legacy/collect_by_key.json
  outputs:
    collectByKeyWorkflow.copy_output.the_output:
      type: File
      value: {md5sum: 'cf373525532455655c9bc226c91f5842'}
