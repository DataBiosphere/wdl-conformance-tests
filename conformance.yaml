- versions: [ "draft-2" ]
  tags: [ 0, "stdout" ]
  description: |
    Standard Lib: Basic test for stdout()
  inputs:
    wdl: standard_library/basic_stdout.wdl
    json: standard_library/basic_stdout.json
  outputs:
    stdoutWorkflow.get_stdout.check_this:
      type: "File"
      value: { md5sum: "91d69f7c47b6e7d5e4d81fab67f7f304" }
- tags: [ "stderr" ]
  versions: [ "draft-2" ]
  description: |
    Standard Lib: Basic test for stderr()
  inputs:
    wdl: standard_library/basic_stderr.wdl
    json: standard_library/basic_stderr.json
  outputs:
    stderrWorkflow.get_stderr.check_this:
      type: "File"
      value: { md5sum: "2332021c3feef276abe077f34276abfe" }
- tags: [ "quote" ]
  versions: [ "1.1" ]
  description: |
    Standard Lib: Basic test for quote()
  inputs:
    wdl: standard_library/basic_quote.wdl
    json: standard_library/basic_quote.json
  outputs:
    quoteWorkflow.str_output:
      value: [ '"value1"', '"value2"', '"value3"' ]
      type: "Array[String]"
    quoteWorkflow.int_output:
      value: [ '"1"', '"2"', '"-3"' ]
      type: "Array[String]"
    quoteWorkflow.float_output:
      value: [ '"1.234000"', '"-0.543000"', '"-13.300000"' ]
      type: "Array[String]"
    quoteWorkflow.bool_output:
      value: [ '"true"', '"false"', '"true"' ]
      type: "Array[String]"
    quoteWorkflow.file_output:
      value: [ '"${WDL_DIR}/tests/version_1.1/standard_library/basic_quote.wdl"', '"${WDL_DIR}/tests/version_1.1/standard_library/basic_quote.json"', '"${WDL_DIR}/run.py"' ] # files are relative path to input files, cannot go up in subdir, ex with run.py
      type: "Array[String]"
- versions: [ "1.1" ]
  tags: [ "squote" ]
  description: |
    Standard Lib: Basic test for squote()
  inputs:
    wdl: standard_library/basic_squote.wdl
    json: standard_library/basic_squote.json
  outputs:
    squoteWorkflow.str_output:
      value: [ "'value1'", "'value2'", "'value3'" ]
      type: "Array[String]"
    squoteWorkflow.int_output:
      value: [ "'1'", "'2'", "'-3'" ]
      type: "Array[String]"
    squoteWorkflow.float_output:
      value: [ "'1.234000'", "'-0.543000'", "'-13.300000'" ]
      type: "Array[String]"
    squoteWorkflow.bool_output:
      value: [ "'true'", "'false'", "'true'" ]
      type: "Array[String]"
    squoteWorkflow.file_output:
      value: [ "'${WDL_DIR}/tests/version_1.1/standard_library/basic_quote.wdl'", "'${WDL_DIR}/tests/version_1.1/standard_library/basic_quote.json'", "'${WDL_DIR}/run.py'" ]
      type: "Array[String]"
- versions: [ "1.1" ]
  tags: [ "sep" ]
  description: |
    Standard Lib: Basic test for sep()
  inputs:
    wdl: standard_library/basic_sep.wdl
    json: standard_library/basic_sep.json
  outputs:
    sepWorkflow.str_output:
      value: "a - b - c"
      type: "String"
- versions: [ "1.0", "draft-2", "1.1" ]
  tags: [ "prefix" ]
  description: |
    Standard Lib: Basic test for prefix()
  inputs:
    wdl: standard_library/basic_prefix.wdl
    json: standard_library/basic_prefix.json
  outputs:
    prefixWorkflow.str_output:
      value: [ "-e value1", "-e value2", "-e value3" ]
      type: "Array[String]"
- versions: [ "draft-2", "1.0", "1.1" ]
  tags: [ "select_first" ]
  description: |
    Standard Lib: Basic test for select_first()
  inputs:
    wdl: standard_library/basic_select_first.wdl
    json: standard_library/basic_select_first.json
  outputs:
    selectFirstWorkflow.int_output:
      value: 5
      type: "Int"
    selectFirstWorkflow.str_output:
      type: "String"
      value: "value1"
    selectFirstWorkflow.bool_output:
      type: "Boolean"
      value: true
    selectFirstWorkflow.float_output:
      type: "Float"
      value: 999.9999999
    selectFirstWorkflow.file_output:
      value: { md5sum: "337cf995cbd86664d941095a45e5e75d" }
      type: "File"
- versions: [ "draft-2", "1.0", "1.1" ]
  tags: [ "select_all" ]
  description: |
    Standard Lib: Basic test for select_all()
  inputs:
    wdl: standard_library/basic_select_all.wdl
    json: standard_library/basic_select_all.json
  outputs:
    selectAllWorkflow.int_output:
      type: "Array[Int]"
      value: [ 4, 5 ]
    selectAllWorkflow.float_output:
      type: "Array[Float]"
      value: [ 1.2345 ]
    selectAllWorkflow.str_output:
      type: "Array[String]"
      value: [ "value1", "value3" ]
    selectAllWorkflow.bool_output:
      type: "Array[Boolean]"
      value: [ true, false ]
    selectAllWorkflow.file_output:
      type: "Array[File]"
      value: [ { md5sum: "c4b90e142a9ba0270f8137244caa246c" } ]
- versions: [ "1.1" ]
  tags: [ "suffix" ]
  description: |
    Standard Lib: Basic test for suffix()
  inputs:
    wdl: standard_library/basic_suffix.wdl
    json: standard_library/basic_suffix.json
  outputs:
    suffixWorkflow.str_output:
      value: [ "value1.txt", "value2.txt", "value3.txt" ]
      type: "Array[String]"
- versions: [ "draft-2", "1.0", "1.1" ]
  tags: [ "defined" ]
  description: |
    Standard Lib: Basic test for defined()
  inputs:
    wdl: standard_library/basic_defined.wdl
    json: standard_library/basic_defined.json
  outputs:
    definedWorkflow.bool_output:
      value: true
      type: "Boolean"
    definedWorkflow.bool_output_none:
      value: false
      type: "Boolean"
- versions: [ "draft-2", "1.0", "1.1" ]
  tags: [ "basename" ]
  description: |
    Standard Lib: Basic test for basename()
  inputs:
    wdl: standard_library/basic_basename.wdl
    json: standard_library/basic_basename.json
  outputs:
    basenameWorkflow.str_output:
      type: "String"
      value: "file.txt"
    basenameWorkflow.str_output_removed:
      type: "String"
      value: "file"
    basenameWorkflow.str_output_file:
      type: "String"
      value: "basic_basename.json"
    basenameWorkflow.str_output_file_removed:
      type: "String"
      value: "basic_basename"
- versions: [ "1.1", "1.0" ]
  tags: [ "fail" ]
  description: |
    Basic failure test, with invalid arguments
  inputs:
    wdl: standard_library/basic_fail.wdl
    json: standard_library/basic_fail.json
  outputs:
    fail: { }
- versions: [ "1.1" ]
  tags: [ "pair" ]
  description: |
    Basic test for compound type pair
  inputs:
    wdl: semantics/basic_pair.wdl
    json: semantics/basic_pair.json
  outputs:
    pairWorkflow.pair_output:
      type: "Pair[Int, Int]"
      value: { left: 2, right: 4 }
- versions: [ "1.1" ]
  tags: [ "map" ]
  description: |
    Basic test for compound type map
  inputs:
    wdl: semantics/basic_map.wdl
    json: semantics/basic_map.json
  outputs:
    mapWorkflow.map_output:
      type: "Map[Int, Int]"
      value: { "1": 2, "3": 4 } # keys must be string
- versions: [ "1.1" ]
  tags: [ "array_pair" ]
  description: |
    Basic test for compound type array of pair
  inputs:
    wdl: semantics/basic_array_pair.wdl
    json: semantics/basic_array_pair.json
  outputs:
    arrayPairWorkflow.pair_output:
      type: "Array[Pair[Int,Int]]"
      value: [ { left: 2, right: 4 } ]
- versions: [ "1.0" ]
  tags: [ "object" ]
  description: |
    Basic object test
    MiniWDL does not support Objects, so this will fail if ran by MiniWDL
  inputs:
    wdl: semantics/basic_object.wdl
    json: semantics/basic_object.json
  outputs:
    objectWorkflow.obj_output:
      value: { "b": "hello", "a": 10, "f": { md5sum: "9eb48991c704af23036a7be959efd489" } }
      type:
        b: String
        a: Int
        f: File
- versions: [ "1.1", "1.0" ]
  tags: [ "struct" ]
  description: |
    Basic struct test
  inputs:
    wdl: semantics/basic_struct.wdl
    json: semantics/basic_struct.json
  outputs:
    structWorkflow.struct_output:
      type:
        sample_string: String
        sample_index: Int
      value: { "sample_string": "hello", "sample_index": 10 }
- versions: [ "1.1" ]
  tags: [ "nested_struct" ]
  description: |
    Basic nested struct test
  inputs:
    wdl: semantics/basic_nested_struct.wdl
    json: semantics/basic_nested_struct.json
  outputs:
    structWorkflow.struct_output:
      type:
        sample_struct:
          sample_int: Int
          sample_string: String
        sample_int: Int
      value: { "sample_struct": { "sample_string": "Hello", "sample_int": 20 }, "sample_int": 10 }
- versions: [ "draft-2" ]
  tags: [ "ceil" ]
  description: |
    Basic ceil() test
  inputs:
    wdl: standard_library/basic_ceil.wdl
    json: standard_library/basic_ceil.json
  outputs:
    ceilWorkflow.get_ceil.the_ceiling:
      type: Int
      value: 12
- tags: [ "string_placeholders" ]
  versions: [ "1.1" ]
  description: |
    Parser: expression placeholders in strings in 1.1
  inputs:
    "wdl": "parser/string_placeholders_1.1.wdl"
    "json": "parser/empty.json"
  "outputs":
    placeholderWorkflow.ones:
      "type": "Array[String]"
      "value": [ "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1" ]
- tags: [ "string_placeholders_in_conditionals_1.1" ]
  versions: [ "1.1" ]
  description: |
    Parser: expression placeholders in strings in conditional expressions in 1.1
  inputs:
    "wdl": "parser/string_placeholders_in_conditionals_1.1.wdl"
    "json": "parser/empty.json"
  "outputs":
    placeholderWorkflow.result:
      "type": "String"
      "value": "yep"
- tags: [ "string_placeholders_in_conditionals_1.0" ]
  versions: [ "1.0" ]
  description: |
    Parser: expression placeholders in strings in conditional expressions in 1.0, Cromwell style
  inputs:
    "wdl": "parser/string_placeholders_in_conditionals_1.0.wdl"
    "json": "parser/empty.json"
  "outputs":
    placeholderWorkflow.result:
      "type": "String"
      "value": "[\"cromwell\"]"
- tags: [ "null_optional_vs_default_1.0" ]
  versions: [ "1.0" ]
  description: |
    Semantics: passing a null optional value as an input to a task does not override a default value with null
  inputs:
    "wdl": "semantics/null_optional_vs_default_1.0.wdl"
    "json": "semantics/empty.json"
  "outputs":
    overrideWorkflow.result:
      "type": "Int"
      "value": 1
- tags: [ "null_input_through_workflows_1.0" ]
  versions: [ "1.0" ]
  description: |
    Semantics: passing a null optional value as an input to a workflow that calls subworkflows does not override a default value with null
  inputs:
    "wdl": "semantics/null_input_through_workflows_1.0.wdl"
    "json": "semantics/empty.json"
  "outputs":
    nullInput.result:
      "type": "Int"
      "value": 1
- tags: [ "non_null_input_through_workflows_1.0" ]
  versions: [ "1.0" ]
  description: |
    Semantics: passing a non-null optional value as an input to a workflow that calls subworkflows brings it through
  inputs:
    "wdl": "semantics/null_input_through_workflows_1.0.wdl"
    "json": "semantics/nonnull_input.json"
  "outputs":
    nullInput.result:
      "type": "Int"
      "value": 10
- description: |
    Integration test for GATK tutorial 4 test, needs environmental variable MINIWDL__FILE_IO__ALLOW_ANY_INPUT=true
  versions: ["1.0"]
  tags: ["t04", "integration"]
  inputs:
    wdl: integration/jointCallingGenotypes.wdl
    json: integration/jointCallingGenotypes_inputs.json
  outputs:
    jointCallingGenotypes.file_output:
      type: Array[File]
      value: [ { regex: "(20.*\n){411}" }, { regex: "(20.*\n){411}" }, { regex: "(20.*\n){411}" } ]