- description: |
    Standard Lib: Basic test for stdout()
  tags: ["stdout", "standard_library"]
  versions: ["draft-2", "1.0"]
  inputs:
    wdl: standard_library/basic_stdout.wdl
    json: standard_library/basic_stdout.json
  outputs:
    stdoutWorkflow.check_this:
      type: File
      value: {md5sum: "91d69f7c47b6e7d5e4d81fab67f7f304"}
- description: |
    Standard Lib: Basic test for stderr()
  tags: ["stderr", "standard_library"]
  versions: ["draft-2", "1.0"]
  inputs:
    wdl: standard_library/basic_stderr.wdl
    json: standard_library/basic_stderr.json
  outputs:
    stderrWorkflow.check_this:
      type: File
      value: {md5sum: "2332021c3feef276abe077f34276abfe"}
- description: |
    Standard Lib: Basic test for quote()
  tags: ["quote", "standard_library"]
  versions: ["1.1"]
  inputs:
    wdl: standard_library/basic_quote.wdl
    json: standard_library/basic_quote.json
  outputs:
    quoteWorkflow.str_output:
      type: Array[String]
      value: ['"value1"', '"value2"', '"value3"']
    quoteWorkflow.int_output:
      type: Array[String]
      value: ['"1"', '"2"', '"-3"']
    quoteWorkflow.float_output:
      type: Array[String]
      value: ['"1.234000"', '"-0.543000"', '"-13.300000"']
    quoteWorkflow.bool_output:
      type: Array[String]
      value: ['"true"', '"false"', '"true"']
    quoteWorkflow.file_output:
      type: File
      value: {regex: '.*(basic_quote\.wdl)\s.*(basic_quote\.json)\s.*(run\.py)\s?'}
- description: |
    Standard Lib: Basic test for squote()
  tags: ["squote", "standard_library"]
  versions: ["1.1"]
  inputs:
    wdl: standard_library/basic_squote.wdl
    json: standard_library/basic_squote.json
  outputs:
    squoteWorkflow.str_output:
      type: Array[String]
      value: ["'value1'", "'value2'", "'value3'"]
    squoteWorkflow.int_output:
      type: Array[String]
      value: ["'1'", "'2'", "'-3'"]
    squoteWorkflow.float_output:
      type: Array[String]
      value: ["'1.234000'", "'-0.543000'", "'-13.300000'"]
    squoteWorkflow.bool_output:
      type: Array[String]
      value: ["'true'", "'false'", "'true'"]
    squoteWorkflow.file_output:
      type: File
      value: {regex: '.*(basic_quote\.wdl)\s.*(basic_quote\.json)\s.*(run\.py)\s?'}
- description: |
    Standard Lib: Basic test for sep()
  tags: ["sep", "standard_library"]
  versions: ["1.1"]
  inputs:
    wdl: standard_library/basic_sep.wdl
    json: standard_library/basic_sep.json
  outputs:
    sepWorkflow.str_output:
      type: String
      value: "a - b - c"
- description: |
    Standard Lib: Basic test for prefix()
  tags: ["prefix", "standard_library"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: standard_library/basic_prefix.wdl
    json: standard_library/basic_prefix.json
  outputs:
    prefixWorkflow.str_output:
      type: Array[String]
      value: ["-e value1", "-e value2", "-e value3"]
- description: |
    Standard Lib: Basic test for select_first()
  tags: ["select_first", "standard_library"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: standard_library/basic_select_first.wdl
    json: standard_library/basic_select_first.json
  outputs:
    selectFirstWorkflow.int_output:
      type: Int
      value: 5
    selectFirstWorkflow.str_output:
      type: String
      value: "value1"
    selectFirstWorkflow.bool_output:
      type: "Boolean"
      value: true
    selectFirstWorkflow.float_output:
      type: "Float"
      value: 999.9999999
    selectFirstWorkflow.file_output:
      type: File
      value: {md5sum: "337cf995cbd86664d941095a45e5e75d"}
- description: |
    Standard Lib: Basic test for select_all()
  tags: ["select_all", "standard_library"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: standard_library/basic_select_all.wdl
    json: standard_library/basic_select_all.json
  outputs:
    selectAllWorkflow.int_output:
      type: "Array[Int]"
      value: [4, 5]
    selectAllWorkflow.float_output:
      type: "Array[Float]"
      value: [1.2345]
    selectAllWorkflow.str_output:
      type: Array[String]
      value: ["value1", "value3"]
    selectAllWorkflow.bool_output:
      type: "Array[Boolean]"
      value: [true, false]
    selectAllWorkflow.file_output:
      type: "Array[File]"
      value: [md5sum: "c4b90e142a9ba0270f8137244caa246c"]
- description: |
    Standard Lib: Basic test for suffix()
  tags: ["suffix", "standard_library"]
  versions: ["1.1"]
  inputs:
    wdl: standard_library/basic_suffix.wdl
    json: standard_library/basic_suffix.json
  outputs:
    suffixWorkflow.str_output:
      type: Array[String]
      value: ["value1.txt", "value2.txt", "value3.txt"]
- description: |
    Standard Lib: Basic test for defined()
  tags: ["defined", "standard_library"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: standard_library/basic_defined.wdl
    json: standard_library/basic_defined.json
  outputs:
    definedWorkflow.bool_output:
      type: "Boolean"
      value: true
    definedWorkflow.bool_output_none:
      type: "Boolean"
      value: false
- description: |
    Standard Lib: Basic test for basename()
  tags: ["basename", "standard_library"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: standard_library/basic_basename.wdl
    json: standard_library/basic_basename.json
  outputs:
    basenameWorkflow.str_output:
      type: String
      value: "file.txt"
    basenameWorkflow.str_output_removed:
      type: String
      value: "file"
    basenameWorkflow.str_output_file:
      type: String
      value: "basic_basename.json"
    basenameWorkflow.str_output_file_removed:
      type: String
      value: "basic_basename"
- description: |
    Basic failure test, with invalid arguments
  tags: ["bad_args", "fail", "standard_library"]
  versions: ["1.0", "1.1"]
  inputs:
    wdl: standard_library/basic_fail.wdl
    json: standard_library/basic_fail.json
  outputs:
    fail: {}
- description: |
    Basic ceil() test
  tags: ["ceil", "standard_library"]
  versions: ["draft-2", "1.0"]
  inputs:
    wdl: standard_library/basic_ceil.wdl
    json: standard_library/basic_ceil.json
  outputs:
    ceilWorkflow.int_output:
      type: Int
      value: 12
- description: |
    Basic test for compound type pair
  tags: ["pair", "semantics"]
  versions: ["1.0", "1.1"]
  inputs:
    wdl: semantics/basic_pair.wdl
    json: semantics/basic_pair.json
  outputs:
    pairWorkflow.pair_output:
      type: Pair[Int, Int]
      value: {left: 2, right: 4}
- description: |
    Basic test for compound type map
  tags: ["map", "semantics"]
  versions: ["1.0", "1.1"]
  inputs:
    wdl: semantics/basic_map.wdl
    json: semantics/basic_map.json
  outputs:
    mapWorkflow.map_output:
      type: Map[Int, Int]
      value: {"1": 2, "3": 4}
- description: |
    Basic test for compound type array of pair
  tags: ["array_pair", "semantics"]
  versions: ["1.0", "1.1"]
  inputs:
    wdl: semantics/basic_array_pair.wdl
    json: semantics/basic_array_pair.json
  outputs:
    arrayPairWorkflow.pair_output:
      type: Array[Pair[Int,Int]]
      value: [{left: 2, right: 4}]
- description: |
    Basic object test (deprecated and removed in 1.1)
    MiniWDL and toil-wdl-runner do not support Objects, so this will fail if ran by them
  tags: ["object", "semantics"]
  versions: ["1.0"]
  inputs:
    wdl: semantics/basic_object.wdl
    json: semantics/basic_object.json
  outputs:
    objectWorkflow.obj_output:
      type: {b: String, a: Int, f: File}
      value: {"b": "hello", "a": 10, "f": {md5sum: "9eb48991c704af23036a7be959efd489"}}
- description: |
    Basic struct test
  tags: ["struct", "semantics"]
  versions: ["1.0", "1.1"]
  inputs:
    wdl: semantics/basic_struct.wdl
    json: semantics/basic_struct.json
  outputs:
    structWorkflow.struct_output:
      type: {sample_string: String, sample_index: Int}
      value: {"sample_string": "hello", "sample_index": 10}
- description: |
    Basic nested struct test
  tags: ["nested_struct", "semantics"]
  versions: ["1.1"]
  inputs:
    wdl: semantics/basic_nested_struct.wdl
    json: semantics/basic_nested_struct.json
  outputs:
    structWorkflow.struct_output:
      type: {sample_struct: {sample_int: Int, sample_string: String}, sample_int: Int}
      value: {"sample_struct": {"sample_string": "Hello", "sample_int": 20}, "sample_int": 10}
- description: |
    Parser: expression placeholders in strings in 1.1
  tags: ["string_placeholders", "parser"]
  versions: ["1.1"]
  inputs:
    wdl: parser/string_placeholders_1.1.wdl
    json: parser/empty.json
  "outputs":
    placeholderWorkflow.ones:
      type: Array[String]
      value: ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"]
- description: |
    Parser: expression placeholders in strings in conditional expressions in 1.1
  tags: ["string_placeholders_in_conditionals_1.1", "parser"]
  versions: ["1.1"]
  inputs:
    wdl: parser/string_placeholders_in_conditionals_1.1.wdl
    json: parser/empty.json
  "outputs":
    placeholderWorkflow.result:
      type: String
      value: "yep"
- description: |
    Parser: expression placeholders in strings in conditional expressions in 1.0, Cromwell style
    Fails with MiniWDL and toil-wdl-runner
  tags: ["string_placeholders_in_conditionals_1.0", "parser"]
  versions: ["1.0"]
  inputs:
    wdl: parser/string_placeholders_in_conditionals_1.0.wdl
    json: parser/empty.json
  "outputs":
    placeholderWorkflow.result:
      type: String
      value: "cromwell"
- description: |
    Semantics: passing a null optional value as an input to a task does not override a default value with null
  tags: ["null_optional_vs_default_1.0", "semantics"]
  versions: ["1.0", "1.1"]
  inputs:
    wdl: semantics/null_optional_vs_default_1.0.wdl
    json: semantics/empty.json
  "outputs":
    overrideWorkflow.result:
      type: Int
      value: 1
- description: |
    Semantics: passing a null optional value as an input to a workflow that calls subworkflows does not override a default value with null
  tags: ["null_input_through_workflows_1.0", "semantics"]
  versions: ["1.0", "1.1"]
  inputs:
    wdl: semantics/null_input_through_workflows_1.0.wdl
    json: semantics/empty.json
  "outputs":
    nullInput.result:
      type: Int
      value: 1
- description: |
    Semantics: passing a non-null optional value as an input to a workflow that calls subworkflows brings it through
  tags: ["non_null_input_through_workflows_1.0", "semantics"]
  versions: ["1.0", "1.1"]
  inputs:
    wdl: semantics/null_input_through_workflows_1.0.wdl
    json: semantics/nonnull_input.json
  "outputs":
    nullInput.result:
      type: Int
      value: 10
- description: |
    Semantics: An empty output in the top-level workflow should output all called task outputs instead in WDL v1.0 only
  tags: ["empty_output", "semantics"]
  versions: ["1.0"]
  inputs:
    wdl: semantics/empty_output.wdl
    json: semantics/empty_output_intput.json
  outputs:
    emptyOutputWorkflow.task_with_output:
      type: Int
      value: 1
# tests from toil's original wdl tests
# some of these tests depend on write_json(), and cromwell and miniwdl perform write_json() differently
# miniwdl inserts whitespace in between elements when writing json and cromwell does not
- description: |
    Legacy test for type_pair_basic
    Only cromwell passes this, others attempt to unify types
  tags: ["type_pair", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/type_pair_basic.wdl
    json: legacy/type_pair_basic.json
  outputs:
    typePairWorkflow.left_pair_output:
      type: Int
      value: 23
    typePairWorkflow.right_pair_output:
      type: String
      value: "twenty-three"
    typePairWorkflow.nested_pair_output:
      type: String
      value: "a.bai"
    typePairWorkflow.full_pair_output:
      type: Pair[Int, String]
      value: {left: 23, right: "twenty-three"}
- description: |
    Legacy test for type_pair_with_files
    MiniWDL cannot run this as input files must be mounted before running, and the WDL calls a file by filename
  tags: ["type_pair", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/type_pair_with_files.wdl
    json: legacy/type_pair_with_files.json
  outputs:
    typePairWorkflow.the_output:
      type: File
      value: {md5sum: 'a57c217bff53c247baabe3e910173a49'}
- description: |
    Legacy test for v1_spec_declaration
  tags: ["declaration", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/v1_spec_declaration.wdl
    json: legacy/v1_spec.json
  outputs:
    wf.x_value:
      type: String
      value: "Hello, x!"
    wf.y_value:
      type: String
      value: "Hello, y!"
    wf.z_the_output:
      type: File
      value: {md5sum: '5f2c4e74d1e58614b094b31790315324'}
- description: |
    Legacy test for sub_as_input
  tags: ["sub", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/sub_as_input.wdl
    json: legacy/sub.json
  outputs:
    subWorkflow.the_output:
      type: File
      value: {regex: 'test\.csv'}
- description: |
    Legacy test for sub_as_input_with_file
  tags: ["sub", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/sub_as_input_with_file.wdl
    json: legacy/sub.json
  outputs:
    subWorkflow.the_output:
      type: File
      value: {regex: 'test\.csv'}
- description: |
    Legacy test for size_as_command
  tags: ["size", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/size_as_command.wdl
    json: legacy/size.json
  outputs:
    sizeWorkflow.the_output:
      type: File
      value: {regex: '19(\.0+)$'}
- description: |
    Legacy test for size_as_output
    Cromwell appears to not support nonbinary units with size()
  tags: ["size", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/size_as_output.wdl
    json: legacy/empty.json
  outputs:
    sizeWorkflow.the_output:
      type: File
      value: {regex: '22\.0+ 0\.0220* 0\.021484(375)?'}
    sizeWorkflow.created_file_size:
      type: Float
      value: 22.0
    sizeWorkflow.created_file_size_in_KB:
      type: Float
      value: 0.022
    sizeWorkflow.created_file_size_in_KiB:
      type: Float
      value: 0.021484375
- description: |
    Legacy test for ceil_as_input
  tags: ["ceil", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/ceil_as_input.wdl
    json: legacy/ceil.json
  outputs:
    ceilWorkflow.the_ceiling:
      type: File
      value: {regex: '12(\.0+)?$'}
- description: |
    Legacy test for ceil_as_command
  tags: ["ceil", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/ceil_as_command.wdl
    json: legacy/ceil.json
  outputs:
    ceilWorkflow.the_ceiling:
      type: File
      value: {md5sum: '2737b49252e2a4c0fe4c342e92b13285'}
- description: |
    Legacy test for floor_as_input
  tags: ["floor", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/floor_as_input.wdl
    json: legacy/floor.json
  outputs:
    floorWorkflow.the_flooring:
      type: File
      value: {regex: '11(\.0+)?$'}
- description: |
    Legacy test for floor_as_command
  tags: ["floor", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/floor_as_command.wdl
    json: legacy/floor.json
  outputs:
    floorWorkflow.the_flooring:
      type: File
      value: {md5sum: '166d77ac1b46a1ec38aa35ab7e628ab5'}
- description: |
    Legacy test for round_as_input
  tags: ["round", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/round_as_input.wdl
    json: legacy/round.json
  outputs:
    roundWorkflow.the_rounding:
      type: File
      value: {regex: '11(\.0+)?$'}
- description: |
    Legacy test for round_as_command
  tags: ["round", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/round_as_command.wdl
    json: legacy/round.json
  outputs:
    roundWorkflow.the_rounding:
      type: File
      value: {md5sum: '166d77ac1b46a1ec38aa35ab7e628ab5'}
- description: |
    Legacy test for stdout_as_output
  tags: ["stdout", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/stdout_as_output.wdl
    json: legacy/stdout.json
  outputs:
    stdoutWorkflow.the_output:
      type: File
      value: {md5sum: '91d69f7c47b6e7d5e4d81fab67f7f304'}
    stdoutWorkflow.check_this:
      type: File
      value: {md5sum: '91d69f7c47b6e7d5e4d81fab67f7f304'}
- description: |
    Legacy test for stderr_as_output
  tags: ["stderr", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/stderr_as_output.wdl
    json: legacy/stderr.json
  outputs:
    stderrWorkflow.the_output:
      type: File
      value: {md5sum: '2332021c3feef276abe077f34276abfe'}
    stderrWorkflow.check_this:
      type: File
      value: {md5sum: '2332021c3feef276abe077f34276abfe'}
- description: |
    Legacy test for read_lines_as_output
  tags: ["read_lines", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/read_lines_as_output.wdl
    json: legacy/read_lines.json
  outputs:
    readLinesWorkflow.the_output:
      type: File
      value: {md5sum: '0cf95c7bec0f04798b2e95d762e2210e'}
    readLinesWorkflow.out_array:
      type: Array[String]
      value: ["line 1", "\t\tline 2 with tabs", " line 3", "", "line 5"]
- description: |
    Legacy test for read_tsv_as_output
  tags: ["read_tsv", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/read_tsv_as_output.wdl
    json: legacy/read_tsv.json
  outputs:
    readTsvWorkflow.the_output:
      type: File
      value: {md5sum: '577e5fb9bb016c922798424a3c82e742'}
    readTsvWorkflow.out_tsv:
      type: Array[Array[String]]
      value: [["1", "2", "3"], ["4", "5", "6"], ["7", "8", "9"]]
- description: |
    Legacy test for read_json_as_output
  tags: ["read_json", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/read_json_as_output.wdl
    json: legacy/read_json.json
  outputs:
    readJsonWorkflow.the_output:
      type: File
      value: {regex: '{\"key1\":\s?\"value1\",\s?\"key2\":\s?\"value2\"}'}
    readJsonWorkflow.out_json:
      type: Map[String, String]
      value: {"key1": "value1", "key2": "value2"}
- description: |
    Legacy test for read_map_as_output
  tags: ["read_map", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/read_map_as_output.wdl
    json: legacy/read_map.json
  outputs:
    readMapWorkflow.the_output:
      type: File
      value: {regex: 'key1\s+value1\s+key2\s+value2'}
    readMapWorkflow.out_map:
      type: Map[String, String]
      value: {"key1": "value1", "key2": "value2"}
- description: |
    Legacy test for read_int_as_command
  tags: ["read_int", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/read_int_as_command.wdl
    json: legacy/read_int.json
  outputs:
    readIntWorkflow.the_output:
      type: File
      value: {md5sum: '166d77ac1b46a1ec38aa35ab7e628ab5'}
- description: |
    Legacy test for read_string_as_command
  tags: ["read_string", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/read_string_as_command.wdl
    json: legacy/read_string.json
  outputs:
    readStringWorkflow.read_string.the_output:
      type: File
      value: {md5sum: '91d69f7c47b6e7d5e4d81fab67f7f304'}
- description: |
    Legacy test for read_float_as_command
  tags: ["read_float", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/read_float_as_command.wdl
    json: legacy/read_float.json
  outputs:
    readFloatWorkflow.the_output:
      type: File
      value: {regex: '11\.23450*$'}
- description: |
    Legacy test for read_boolean_as_command
  tags: ["read_boolean", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/read_boolean_as_command.wdl
    json: legacy/read_boolean.json
  outputs:
    readBooleanWorkflow.the_output:
      type: File
      value: {md5sum: '74d9a83219cabaab06a69fd318873f33'}
- description: |
    Legacy test for write_tsv_as_command
  tags: ["write_tsv", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/write_tsv_as_command.wdl
    json: legacy/write_tsv.json
  outputs:
    writeTsvWorkflow.the_output:
      type: File
      value: {md5sum: '23754c24ac7327768d56aa9909fb8473'}
- description: |
    Legacy test for write_json_as_command
  tags: ["write_json", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/write_json_as_command.wdl
    json: legacy/write_json.json
  outputs:
    writeJsonWorkflow.the_output:
      type: File
      value: {regex: '{\"key1\":\s?\"value1\",\s?\"key2\":\s?\"value2\"}'}
- description: |
    Legacy test for write_map_as_command
  tags: ["write_map", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/write_map_as_command.wdl
    json: legacy/write_map.json
  outputs:
    writeMapWorkflow.the_output:
      type: File
      value: {regex: 'key1\s+value1\nkey2\s+value2'}
- description: |
    Legacy test for range_as_input
  tags: ["range", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/range_as_input.wdl
    json: legacy/range.json
  outputs:
    rangeWorkflow.the_output:
      type: File
      value: {md5sum: '4ae1ec070a2217ff003b2ea3631531ac'}
- description: |
    Legacy test for range_as_input, fail
  tags: ["range", "legacy", "fail"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/range_as_input.wdl
    json: legacy/range_invalid.json
  outputs:
    fail: {}
- description: |
    Legacy test for range_as_input, range=0
  tags: ["range", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/range_as_input.wdl
    json: legacy/range_0.json
  outputs:
    rangeWorkflow.the_output:
      type: File
      value: {regex: '\s?'}
- description: |
    Legacy test for write_lines_as_command
  tags: ["write_lines", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/write_lines_as_command.wdl
    json: legacy/write_lines.json
  outputs:
    writeLinesWorkflow.the_output:
      type: File
      value: {md5sum: '67c62663b722611ba87041eb05870eb9'}
- description: |
    Legacy test for transpose_as_input
  tags: ["transpose", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/transpose_as_input.wdl
    json: legacy/transpose.json
  outputs:
    transposeWorkflow.the_output:
      type: File
      value: {md5sum: '7c72caeae4ed3a94a1c5c3f856466ebd'}
- description: |
    Legacy test for length_as_input
  tags: ["length", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/length_as_input.wdl
    json: legacy/length.json
  outputs:
    lengthWorkflow.the_output:
      type: File
      value: {md5sum: '6d7fce9fee471194aa8b5b6e47267f03'}
- description: |
    Legacy test for length_as_input_with_map, fail
  tags: ["length", "legacy", "fail"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/length_as_input_with_map.wdl
    json: legacy/length.json
  outputs:
    fail: {}
- description: |
    Legacy test for length_as_input, fail
  tags: ["length", "legacy", "fail"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/length_as_input.wdl
    json: legacy/length_invalid.json
  outputs:
    fail: {}
- description: |
    Legacy test for zip_as_input
  tags: ["zip", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/zip_as_input.wdl
    json: legacy/zip.json
  outputs:
    zipWorkflow.the_output:
      type: File
      value: {regex: '\[((({\"left)|(\"right))\":(\s?)([1-3],(\s?)|(\"[abc])\"},?(\s?))){6}\]'}
- description: |
    Legacy test for cross_as_input
  tags: ["cross", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/cross_as_input.wdl
    json: legacy/cross.json
  outputs:
    crossWorkflow.the_output:
      type: File
      value: {regex: '\[{\"left\":(\s?)1,\1\"right\":\1\"a\"},\1{\"left\":(\1)1,\1\"right\":\1\"b\"},\1{\"left\":(\1)2,\1\"right\":\1\"a\"},\1{\"left\":(\1)2,\1\"right\":\1\"b\"},\1{\"left\":(\1)3,\1\"right\":\1\"a\"},\1{\"left\":(\1)3,\1\"right\":\1\"b\"}\]'}
- description: |
    Legacy test for flatten_as_input
  tags: ["flatten", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/flatten_as_input.wdl
    json: legacy/flatten.json
  outputs:
    flattenWorkflow.the_output:
      type: File
      value: {md5sum: '6564a95855125852aca9934ef00ab87d'}
- description: |
    Legacy test for as_pairs_as_input
  tags: ["as_pairs", "legacy"]
  versions: ["1.1"]
  inputs:
    wdl: legacy/as_pairs_as_input.wdl
    json: legacy/as_pairs.json
  outputs:
    asPairsWorkflow.the_output:
      type: File
      value: {md5sum: 'e9f8872409ecc6ef06c505caa58265b6'}
- description: |
    Legacy test for as_map_as_input
    It looks like MiniWDL does not have the function as_map()
  tags: ["as_map", "legacy"]
  versions: ["1.1"]
  inputs:
    wdl: legacy/as_map_as_input.wdl
    json: legacy/as_map.json
  outputs:
    asMapWorkflow.the_output:
      type: File
      value: {md5sum: 'f2ac4e62ad3171bd856c5d70160f1052'}
- description: |
    Legacy test for keys_as_input
  tags: ["keys", "legacy"]
  versions: ["1.1"]
  inputs:
    wdl: legacy/keys_as_input.wdl
    json: legacy/keys.json
  outputs:
    keysWorkflow.the_output:
      type: File
      value: {md5sum: '3a63b1c5da9cd4c9227c9d1ab4d67449'}
- description: |
    Legacy test for collect_by_key_as_input
  tags: ["collect_by_key", "legacy"]
  versions: ["1.1"]
  inputs:
    wdl: legacy/collect_by_key_as_input.wdl
    json: legacy/collect_by_key.json
  outputs:
    collectByKeyWorkflow.the_output:
      type: File
      value: {md5sum: 'cf373525532455655c9bc226c91f5842'}
- description: |
    MiniWDL self test
  tags: ["self_test", "legacy"]
  versions: ["1.0", "1.1"]
  inputs:
    wdl: legacy/miniwdl_self_test.wdl
    json: legacy/miniwdl_self_test_inputs.json
  outputs:
    hello_caller.messages:
      type: Array[String]
      value: ['Hello, Alyssa P. Hacker!', 'Hello, Ben Bitdiddle!']
    hello_caller.message_files:
      type: Array[File]
      value: [{md5sum: '112b774308dee425a0858f81f7f1637b'}, {md5sum: '1f5b27033872fd4f6b695df3520d9daa'}]
- description: |
    MD5 test
  tags: ["md5", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/md5sum.wdl
    json: legacy/md5sum.json
  outputs:
    ga4ghMd5.value:
      type: File
      value: {md5sum: '24b6378740d9662c8f464364b10a133a'}
- description: |
    MD5 test with an empty file
  tags: ["md5_empty", "legacy"]
  versions: ["draft-2", "1.0", "1.1"]
  inputs:
    wdl: legacy/md5sum.wdl
    json: legacy/md5sum.json
  outputs:
    ga4ghMd5.value:
      type: File
      value: {md5sum: '24b6378740d9662c8f464364b10a133a'}